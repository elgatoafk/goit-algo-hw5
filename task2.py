""" Module provides support for regular expressions (RE)"""

import re
from typing import Callable


def generator_numbers(incoming_text: str) -> float:
    """generator_numbers Generate floating-point numbers from an incoming text.

    :param incoming_text: The text to search for floating-point numbers.
    :type incoming_text: str
    :yield: The next floating-point number found in the text.
    :rtype: Iterator[float]
    """
    for match in re.findall(r"\d+\.\d+", incoming_text):
        yield float(match)


def sum_profit(incoming_text: str, gen_func: Callable) -> float:
    """sum_profit Calculate the sum of profits from a given text using a generator function.

    :param incoming_text: The text to process for profits.
    :type incoming_text: str
    :param gen_func: A generator function that yields profit values.
    :type gen_func: Callable
    :return: The sum of all profit values generated by the provided generator function.
    :rtype: float
    """

    return sum(gen_func(incoming_text))
